import logging
import random
import os
import openai
from telegram import Update, Bot, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è OpenAI
def handle_message(update, context):
    user_text = update.message.text

    # –í–º–µ—Å—Ç–æ –ø—Ä–æ—Å—Ç–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –¥–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –≤ OpenAI
    response = openai.ChatCompletion.create(
        model="gpt-4o-mini",
        messages=[
            {"role": "system", "content": "–¢—ã ‚Äî –ø–æ–º–æ—â–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ —Ç–∞—Ä–æ."},
            {"role": "user", "content": user_text}
        ]
    )

    answer = response.choices[0].message.content
    update.message.reply_text(answer)

# –ù–∞—Å—Ç—Ä–æ–∏–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

logger = logging.getLogger(__name__)

# –ö–∞—Ä—Ç—ã –¢–∞—Ä–æ (–º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å)
tarot_cards = [
        "–®—É—Ç (0) ‚Äî üß≥ –°–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å –º–æ–∂–µ—Ç –ø—Ä–∏–Ω–µ—Å—Ç–∏ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—É—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å. –ë—É–¥—å –æ—Ç–∫—Ä—ã—Ç(–∞) –Ω–æ–≤–æ–º—É ‚Äî –¥–∞–∂–µ –µ—Å–ª–∏ —ç—Ç–æ –∫–∞–∂–µ—Ç—Å—è –±–µ–∑—É–º–∏–µ–º, –≤ —ç—Ç–æ–º —Ç–≤–æ–π —à–∞–Ω—Å.",
        "–ú–∞–≥ (I) ‚Äî ü™Ñ –£ —Ç–µ–±—è –µ—Å—Ç—å –≤—Å—ë, —á—Ç–æ–±—ã –¥–æ–±–∏—Ç—å—Å—è —É—Å–ø–µ—Ö–∞. –ò—Å–ø–æ–ª—å–∑—É–π —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è, —Ö–∞—Ä–∏–∑–º—É –∏ —ç–Ω–µ—Ä–≥–∏—é ‚Äî –¥–µ–π—Å—Ç–≤—É–π!",
        "–í–µ—Ä—Ö–æ–≤–Ω–∞—è –ñ—Ä–∏—Ü–∞ (II) ‚Äî ü§´ –ò–Ω—Ç—É–∏—Ü–∏—è ‚Äî —Ç–≤–æ–π –≥–ª–∞–≤–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç —Å–µ–≥–æ–¥–Ω—è. –û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Å–∫—Ä—ã—Ç—ã–µ –¥–µ—Ç–∞–ª–∏ –∏ –Ω–µ–¥–æ—Å–∫–∞–∑–∞–Ω–Ω–æ—Å—Ç–∏ –≤ —Ä–∞–±–æ—á–µ–π —Å—Ä–µ–¥–µ.",
        "–ò–º–ø–µ—Ä–∞—Ç—Ä–∏—Ü–∞ (III) ‚Äî üåø –•–æ—Ä–æ—à–∏–π –¥–µ–Ω—å –¥–ª—è —Ä–æ—Å—Ç–∞, —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞ –∏ –∑–∞–±–æ—Ç—ã –æ –∫–æ–º–∞–Ω–¥–µ. –ù–æ–≤—ã–µ –∏–¥–µ–∏ –ø—Ä–∏–Ω–µ—Å—É—Ç –ø–ª–æ–¥—ã.",
        "–ò–º–ø–µ—Ä–∞—Ç–æ—Ä (IV) ‚Äî üß± –ù–∞–≤–µ–¥–∏ –ø–æ—Ä—è–¥–æ–∫ –≤ –∑–∞–¥–∞—á–∞—Ö –∏ –ø–æ–∫–∞–∂–∏ –ª–∏–¥–µ—Ä—Å—Ç–≤–æ. –°–µ–≥–æ–¥–Ω—è —Ü–µ–Ω–∏—Ç—Å—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å.",
        "–ò–µ—Ä–æ—Ñ–∞–Ω—Ç (V) ‚Äî üìö –ü—Ä–∏—Å–ª—É—à–∞–π—Å—è –∫ –º–Ω–µ–Ω–∏—é –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤ –∏–ª–∏ —Å–∞–º(–∞) —Å—Ç–∞–Ω—å –∏—Å—Ç–æ—á–Ω–∏–∫–æ–º –∑–Ω–∞–Ω–∏–π. –°–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞–º –ø—Ä–∏–Ω–µ—Å—ë—Ç –ø–æ–ª—å–∑—É.",
        "–í–ª—é–±–ª—ë–Ω–Ω—ã–µ (VI) ‚Äî üíû –í —Ä–∞–±–æ—Ç–µ –≤–æ–∑–º–æ–∂–µ–Ω –≤–∞–∂–Ω—ã–π –≤—ã–±–æ—Ä –∏–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ. –î–µ–π—Å—Ç–≤—É–π —Å–µ—Ä–¥—Ü–µ–º, –Ω–æ –Ω–µ –∑–∞–±—ã–≤–∞–π –æ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è—Ö.",
        "–ö–æ–ª–µ—Å–Ω–∏—Ü–∞ (VII) ‚Äî üöÄ –î–µ–Ω—å –¥–ª—è –ø—Ä–æ—Ä—ã–≤–∞! –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –∏ —Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª—ë–Ω–Ω–æ—Å—Ç—å –ø–æ–º–æ–≥—É—Ç –¥–æ–±–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.",
        "–°–∏–ª–∞ (VIII) ‚Äî ü¶Å –ü—Ä–æ—è–≤–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å –∏ –º—è–≥–∫—É—é –Ω–∞—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å. –ü–æ–±–µ–¥–∞ —á–µ—Ä–µ–∑ —Ç–µ—Ä–ø–µ–Ω–∏–µ, –∞ –Ω–µ –¥–∞–≤–ª–µ–Ω–∏–µ.",
        "–û—Ç—à–µ–ª—å–Ω–∏–∫ (IX) ‚Äî üïØ –í–æ–∑–º–æ–∂–Ω–æ, —Å—Ç–æ–∏—Ç –æ—Ç—Å—Ç—Ä–∞–Ω–∏—Ç—å—Å—è –æ—Ç —Å—É–µ—Ç—ã –∏ –ø–æ–¥—É–º–∞—Ç—å. –î–µ–Ω—å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞, –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —É–µ–¥–∏–Ω—ë–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã.",
        "–ö–æ–ª–µ—Å–æ –§–æ—Ä—Ç—É–Ω—ã (X) ‚Äî üé≤ –û–∂–∏–¥–∞–π –ø–æ–≤–æ—Ä–æ—Ç —Å–æ–±—ã—Ç–∏–π. –í–∞–∂–Ω–æ –±—ã—Ç—å –≥–æ—Ç–æ–≤—ã–º –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —à–∞–Ω—Å–æ–º, –∫–æ–≥–¥–∞ –æ–Ω –ø–æ—è–≤–∏—Ç—Å—è.",
        "–°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å (XI) ‚Äî ‚öñÔ∏è –î–µ–Ω—å —Ä–µ—à–µ–Ω–∏–π, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∏ —á–µ—Å—Ç–Ω–æ—Å—Ç–∏. –¢–æ, —á—Ç–æ —Ç—ã –≤–ª–æ–∂–∏–ª(–∞), —Ç–æ –∏ –ø–æ–ª—É—á–∏—à—å.",
        "–ü–æ–≤–µ—à–µ–Ω–Ω—ã–π (XII) ‚Äî üîÑ –°–∏—Ç—É–∞—Ü–∏—è –º–æ–∂–µ—Ç –∫–∞–∑–∞—Ç—å—Å—è –ø–æ–¥–≤–∏—Å—à–µ–π. –ü–æ–ø—Ä–æ–±—É–π –≤–∑–≥–ª—è–Ω—É—Ç—å –Ω–∞ –Ω–µ—ë –ø–æ–¥ –¥—Ä—É–≥–∏–º —É–≥–ª–æ–º –∏ –ø–µ—Ä–µ–æ—Å–º—ã—Å–ª–∏—Ç—å —Ü–µ–ª–∏.",
        "–°–º–µ—Ä—Ç—å (XIII) ‚Äî üîö –°—Ç–∞—Ä–æ–µ —É—Ö–æ–¥–∏—Ç. –ü–æ—Ä–∞ –∑–∞–∫—Ä—ã—Ç—å —ç—Ç–∞–ø –∏ –≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏. –≠—Ç–æ —à–∞–Ω—Å –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.",
        "–£–º–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å (XIV) ‚Äî üßò‚Äç‚ôÄÔ∏è –ò—â–∏ –±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É —Ä–∞–±–æ—Ç–æ–π –∏ –æ—Ç–¥—ã—Ö–æ–º. –ù–µ —Ç–æ—Ä–æ–ø–∏—Å—å ‚Äî –≤—Å—ë –∏–¥—ë—Ç —Å–≤–æ–∏–º —á–µ—Ä–µ–¥–æ–º.",
        "–î—å—è–≤–æ–ª (XV) ‚Äî üîó –û—Å—Ç–æ—Ä–æ–∂–Ω–æ —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏, –º–∞–Ω–∏–ø—É–ª—è—Ü–∏—è–º–∏ –∏–ª–∏ —Ä–∞–±–æ—Ç–æ–π, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–æ—Å–∏—Ç –ª–∏—à—å —Å—Ç—Ä–µ—Å—Å. –ù–µ –ø—Ä–æ–¥–∞–≤–∞–π —Å–µ–±—è –¥—ë—à–µ–≤–æ.",
        "–ë–∞—à–Ω—è (XVI) ‚Äî ‚ö° –í–æ–∑–º–æ–∂–Ω—ã –≤–Ω–µ–∑–∞–ø–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω—ã. –ü—Ä–∏–º–∏ –∏—Ö –∫–∞–∫ —à–∞–Ω—Å –æ–±–Ω–æ–≤–∏—Ç—å—Å—è, –¥–∞–∂–µ –µ—Å–ª–∏ —Å–Ω–∞—á–∞–ª–∞ –±—É–¥–µ—Ç –Ω–µ–∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ.",
        "–ó–≤–µ–∑–¥–∞ (XVII) ‚Äî ‚ú® –í–µ—Ä—å –≤ –ª—É—á—à–µ–µ. –î–∞–∂–µ –µ—Å–ª–∏ –ø—É—Ç—å –¥–æ–ª–≥–∏–π ‚Äî —Ç—ã –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø—É—Ç–∏. –î–µ–Ω—å –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è –∏ –Ω–∞–¥–µ–∂–¥—ã.",
        "–õ—É–Ω–∞ (XVIII) ‚Äî üåô –ù–µ –≤—Å—ë —Ç–∞–∫, –∫–∞–∫ –∫–∞–∂–µ—Ç—Å—è. –ú–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–¥–æ–ø–æ–Ω–∏–º–∞–Ω–∏—è –∏–ª–∏ —Å–∫—Ä—ã—Ç–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è. –ë—É–¥—å –≤–Ω–∏–º–∞—Ç–µ–ª–µ–Ω(—å–Ω–∞).",
        "–°–æ–ª–Ω—Ü–µ (XIX) ‚Äî üåû –£—Å–ø–µ—Ö, –ø—Ä–∏–∑–Ω–∞–Ω–∏–µ –∏ –ø–æ–∑–∏—Ç–∏–≤! –û—Ç–ª–∏—á–Ω—ã–π –¥–µ–Ω—å –¥–ª—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π, —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π –∏ —è—Ä–∫–∏—Ö —Ä–µ—à–µ–Ω–∏–π.",
        "–°—É–¥ (XX) ‚Äî üé∫ –í—Ä–µ–º—è –ø–æ–¥–≤–µ–¥–µ–Ω–∏—è –∏—Ç–æ–≥–æ–≤. –¢–≤–æ–∏ —É—Å–∏–ª–∏—è –±—É–¥—É—Ç –∑–∞–º–µ—á–µ–Ω—ã ‚Äî –±—É–¥—å –≥–æ—Ç–æ–≤(–∞) –∫ –Ω–æ–≤–æ–º—É —ç—Ç–∞–ø—É.",
        "–ú–∏—Ä (XXI) ‚Äî üåç –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤–∞–∂–Ω–æ–≥–æ —Ü–∏–∫–ª–∞. –£—Å–ø–µ—Ö –≤ –ø—Ä–æ–µ–∫—Ç–∞—Ö, –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–π —Ä–∞–±–æ—Ç–µ –∏–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å."
]

def start(update: Update, context: CallbackContext):
    keyboard = [
        [KeyboardButton("–ö–∞—Ä—Ç–∞ –¥–Ω—è –Ω–∞ –¥–µ–Ω—å üîÆ")],
        [KeyboardButton("–ö–∞—Ä—Ç–∞ –¥–Ω—è –Ω–∞ —Ä–∞–±–æ—Ç—É üíº")],
        [KeyboardButton("–ö–∞—Ä—Ç–∞ –¥–Ω—è –æ—Ç–Ω–æ—à–µ–Ω–∏—è ‚ù§Ô∏è")],
        [KeyboardButton("–†–∞—Å–∫–ª–∞–¥ –†–∞—Å–∫–ª–∞–¥ –Ω–∞ —Å–∏—Ç—É–∞—Ü–∏—é –ø—Ä–æ—à–ª–æ–µ/–Ω–∞—Å—Ç–æ—è—â–µ–µ/–±—É–¥—É—â–µ–µ ü§î")],
        [KeyboardButton("–°–æ–≤–µ—Ç –æ—Ç –≤—Å–µ–ª–µ–Ω–Ω–æ–π üåå")]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏ —Ç–∏–ø –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è:",
        reply_markup=reply_markup
    )

def ask_for_question(update: Update, context: CallbackContext):
    update.message.reply_text("ü§î –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–¥–∞–π—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å...")
    context.user_data['waiting_for_question'] = True

def three_card_reading(update: Update, context: CallbackContext, question):
    cards = random.sample(tarot_cards, 3)
    positions = ["–ü—Ä–æ—à–ª–æ–µ/–ü—Ä–∏—á–∏–Ω–∞", "–ù–∞—Å—Ç–æ—è—â–µ–µ/–°–∏—Ç—É–∞—Ü–∏—è", "–ë—É–¥—É—â–µ–µ/–°–æ–≤–µ—Ç"]
    
    message = f"üé¥ –†–∞—Å–∫–ª–∞–¥ –Ω–∞ –≤–æ–ø—Ä–æ—Å:\n\n‚ùì {question}\n\n"
    
    for i, (card, position) in enumerate(zip(cards, positions)):
        interpretation = get_ai_interpretation(card.split('‚Äî')[0].strip(), "–≤–æ–ø—Ä–æ—Å")
        message += f"\n{'‚≠ê' * (i+1)} {position}:\n{card}\n‚ú® –ó–Ω–∞—á–µ–Ω–∏–µ: {interpretation}\n"
    
    conclusion = random.choice([
        "\nüìù –û–±—â–∏–π –≤—ã–≤–æ–¥: –°–∏—Ç—É–∞—Ü–∏—è —Ä–∞–∑–≤–∏–≤–∞–µ—Ç—Å—è –≤ –≤–∞—à—É –ø–æ–ª—å–∑—É, –Ω–æ —Ç—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.",
        "\nüìù –û–±—â–∏–π –≤—ã–≤–æ–¥: –°–µ–π—á–∞—Å –±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω, –¥–æ–≤–µ—Ä—å—Ç–µ—Å—å –∏–Ω—Ç—É–∏—Ü–∏–∏.",
        "\nüìù –û–±—â–∏–π –≤—ã–≤–æ–¥: –ü—Ä–∏—Å–ª—É—à–∞–π—Ç–µ—Å—å –∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º—É –≥–æ–ª–æ—Å—É –∏ –¥–µ–π—Å—Ç–≤—É–π—Ç–µ —Ä–µ—à–∏—Ç–µ–ª—å–Ω–æ.",
        "\nüìù –û–±—â–∏–π –≤—ã–≤–æ–¥: –í–∞—à–∏ –Ω–∞–º–µ—Ä–µ–Ω–∏—è –≤–µ—Ä–Ω—ã, –Ω–æ –ø—É—Ç—å –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–º.",
        "\nüìù –û–±—â–∏–π –≤—ã–≤–æ–¥: –î–æ–≤–µ—Ä—å—Ç–µ—Å—å –ø—Ä–æ—Ü–µ—Å—Å—É –∏ –±—É–¥—å—Ç–µ –æ—Ç–∫—Ä—ã—Ç—ã –Ω–æ–≤—ã–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º."
    ])
    
    update.message.reply_text(message + conclusion)

def button_handler(update: Update, context: CallbackContext):
    text = update.message.text
    
    if context.user_data.get('waiting_for_question', False):
        context.user_data['waiting_for_question'] = False
        three_card_reading(update, context, text)
        return
        
    if text == "–ö–∞—Ä—Ç–∞ –¥–Ω—è –Ω–∞ –¥–µ–Ω—å üîÆ":
        card(update, context, "–¥–µ–Ω—å")
    elif text == "–ö–∞—Ä—Ç–∞ –¥–Ω—è –Ω–∞ —Ä–∞–±–æ—Ç—É üíº":
        card(update, context, "—Ä–∞–±–æ—Ç–∞")
    elif text == "–ö–∞—Ä—Ç–∞ –¥–Ω—è –æ—Ç–Ω–æ—à–µ–Ω–∏—è ‚ù§Ô∏è":
        card(update, context, "–æ—Ç–Ω–æ—à–µ–Ω–∏—è")
    elif text == "–†–∞—Å–∫–ª–∞–¥ –Ω–∞ –≤–æ–ø—Ä–æ—Å ü§î":
        ask_for_question(update, context)
    elif text == "–°–æ–≤–µ—Ç –æ—Ç –≤—Å–µ–ª–µ–Ω–Ω–æ–π üåå":
        universe_advice = [
            "‚ú® –í—Å–µ–ª–µ–Ω–Ω–∞—è –Ω–∞–ø–æ–º–∏–Ω–∞–µ—Ç: —Ç—ã —Å–∏–ª—å–Ω–µ–µ, —á–µ–º –¥—É–º–∞–µ—à—å. –¢–≤–æ–∏ –º–µ—á—Ç—ã –∂–¥—É—Ç —Ç–≤–æ–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π!",
            "üåü –ö–∞–∂–¥–æ–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–µ ‚Äî —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–æ—Å—Ç–∞. –î–æ–≤–µ—Ä—å—Å—è –ø—Ä–æ—Ü–µ—Å—Å—É.",
            "üåà –¢–≤–æ–π –ø—É—Ç—å —É–Ω–∏–∫–∞–ª–µ–Ω. –ù–µ —Å—Ä–∞–≤–Ω–∏–≤–∞–π —Å–≤–æ—é –≥–ª–∞–≤—É 1 —Å —á—å–µ–π-—Ç–æ –≥–ª–∞–≤–æ–π 20.",
            "üå∫ –°–µ–≥–æ–¥–Ω—è –∏–¥–µ–∞–ª—å–Ω—ã–π –¥–µ–Ω—å, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ. –í—Å–µ–ª–µ–Ω–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ç–µ–±—è!",
            "ü¶ã –ü–µ—Ä–µ–º–µ–Ω—ã, –∫–æ—Ç–æ—Ä—ã—Ö —Ç—ã –±–æ–∏—à—å—Å—è, –ø—Ä–∏–≤–µ–¥—É—Ç —Ç–µ–±—è —Ç—É–¥–∞, –≥–¥–µ —Ç—ã –º–µ—á—Ç–∞–µ—à—å –æ–∫–∞–∑–∞—Ç—å—Å—è.",
            "üåô –¢—ã —Ç–æ—á–Ω–æ —Ç–∞–º, –≥–¥–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å. –î–æ–≤–µ—Ä—å—Å—è –º—É–¥—Ä–æ—Å—Ç–∏ –≤—Å–µ–ª–µ–Ω–Ω–æ–π.",
            "üåç –¢–≤–æ–∏ –º—ã—Å–ª–∏ —Ñ–æ—Ä–º–∏—Ä—É—é—Ç —Ç–≤–æ—é —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å. –ù–∞–ø–æ–ª–Ω–∏ –∏—Ö —Å–≤–µ—Ç–æ–º –∏ –ª—é–±–æ–≤—å—é.",
            "‚≠ê –ü–æ–º–Ω–∏: –¥–∞–∂–µ —Å–∞–º–∞—è —Ç–µ–º–Ω–∞—è –Ω–æ—á—å –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è —Ä–∞—Å—Å–≤–µ—Ç–æ–º.",
            "üéØ –§–æ–∫—É—Å–∏—Ä—É–π—Å—è –Ω–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ, –∞ –Ω–µ –Ω–∞ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–µ.",
            "üå± –ö–∞–∂–¥—ã–π –¥–µ–Ω—å ‚Äî —ç—Ç–æ –Ω–æ–≤–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å –ª—É—á—à–µ–π –≤–µ—Ä—Å–∏–µ–π —Å–µ–±—è."
        ]
        message = random.choice(universe_advice)
        update.message.reply_text(message)

def get_ai_interpretation(card_name, prediction_type):
    interpretations = {
        "–≤–æ–ø—Ä–æ—Å": {
            "–∑–Ω–∞—á–µ–Ω–∏–µ": [
                "–∫–∞—Ä—Ç–∞ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–∏—Å–ª—É—à–∞—Ç—å—Å—è –∫ —Å–≤–æ–µ–π –∏–Ω—Ç—É–∏—Ü–∏–∏",
                "—Å–µ–π—á–∞—Å –≤–∞–∂–Ω–æ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Ä–µ—à–∏—Ç–µ–ª—å–Ω–æ –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ",
                "—Å–∏—Ç—É–∞—Ü–∏—è —Ç—Ä–µ–±—É–µ—Ç —Ç–µ—Ä–ø–µ–Ω–∏—è –∏ –º—É–¥—Ä–æ—Å—Ç–∏",
                "–ø–µ—Ä–µ–¥ –≤–∞–º–∏ –æ—Ç–∫—Ä—ã–≤–∞—é—Ç—Å—è –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏",
                "–≤–∞–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –±–∞–ª–∞–Ω—Å –∏ –≥–∞—Ä–º–æ–Ω–∏—é",
                "–≥—Ä—è–¥—É—Ç –≤–∞–∂–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω—ã, –±—É–¥—å—Ç–µ –≥–æ—Ç–æ–≤—ã –∫ –Ω–∏–º",
                "–¥–æ–≤–µ—Ä—å—Ç–µ—Å—å —Å–≤–æ–µ–º—É –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º—É –≥–æ–ª–æ—Å—É",
                "—Å–µ–π—á–∞—Å –±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π",
                "–æ–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –∑–Ω–∞–∫–∏ —Å—É–¥—å–±—ã",
                "–≤–∞—à–∏ —É—Å–∏–ª–∏—è –ø—Ä–∏–Ω–µ—Å—É—Ç –∂–µ–ª–∞–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã"
            ]
        },
        "–¥–µ–Ω—å": {
            "–ª—é–±–æ–≤—å": ["—Å–µ–≥–æ–¥–Ω—è –æ—Å–æ–±–µ–Ω–Ω–æ –±–ª–∞–≥–æ–ø—Ä–∏—è—Ç—Å—Ç–≤—É–µ—Ç —Å–µ—Ä–¥–µ—á–Ω—ã–º –¥–µ–ª–∞–º, –≤–æ–∑–º–æ–∂–Ω–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –≤—Å—Ç—Ä–µ—á–∞, –∫–æ—Ç–æ—Ä–∞—è –∏–∑–º–µ–Ω–∏—Ç –≤–∞—à–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ –ª—é–±–≤–∏", "–∑–≤–µ–∑–¥—ã —Å–æ–≤–µ—Ç—É—é—Ç –æ—Ç–∫—Ä—ã—Ç—å —Å–µ—Ä–¥—Ü–µ –Ω–æ–≤—ã–º —á—É–≤—Å—Ç–≤–∞–º, –¥–∞–∂–µ –µ—Å–ª–∏ –≤—ã –∫ —ç—Ç–æ–º—É –Ω–µ –≥–æ—Ç–æ–≤—ã", "–¥–µ–Ω—å –Ω–µ—Å—ë—Ç –≥–ª—É–±–æ–∫–∏–µ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —Å–¥–µ–ª–∞—é—Ç –≤–∞—Å —Å–∏–ª—å–Ω–µ–µ"],
            "—Ä–∞–±–æ—Ç–∞": ["—Å–µ–≥–æ–¥–Ω—è –≤–∞—à–∞ –∏–Ω—Ç—É–∏—Ü–∏—è –≤ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö –±—É–¥–µ—Ç –æ—Å–æ–±–µ–Ω–Ω–æ –æ—Å—Ç—Ä–æ–π - –¥–æ–≤–µ—Ä—å—Ç–µ—Å—å –µ–π", "–ø–æ—è–≤–∏—Ç—Å—è —à–∞–Ω—Å –ø—Ä–æ—è–≤–∏—Ç—å —Å–≤–æ–∏ —Å–∫—Ä—ã—Ç—ã–µ —Ç–∞–ª–∞–Ω—Ç—ã, –Ω–µ —É–ø—É—Å—Ç–∏—Ç–µ –µ–≥–æ", "–¥–µ–Ω—å –ø—Ä–∏–Ω–µ—Å—ë—Ç –≤–∞–∂–Ω—ã–π —É—Ä–æ–∫ –≤ –∫–∞—Ä—å–µ—Ä–µ - –±—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã –∫ –¥–µ—Ç–∞–ª—è–º"],
            "–∑–¥–æ—Ä–æ–≤—å–µ": ["—ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª –Ω–∞ –≤—ã—Å–æ—Ç–µ - –∏–¥–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤—ã—Ö –ø–æ–ª–µ–∑–Ω—ã—Ö –ø—Ä–∏–≤—ã—á–µ–∫", "–ø—Ä–∏—Å–ª—É—à–∞–π—Ç–µ—Å—å –∫ —Å–≤–æ–µ–º—É —Ç–µ–ª—É, –æ–Ω–æ –ø–æ–¥—Å–∫–∞–∂–µ—Ç, —á—Ç–æ –µ–º—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ", "–¥–µ–Ω—å –±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–µ–Ω –¥–ª—è –¥—É—Ö–æ–≤–Ω—ã—Ö –ø—Ä–∞–∫—Ç–∏–∫ –∏ –º–µ–¥–∏—Ç–∞—Ü–∏–∏"],
            "–æ–±—â–µ–µ": ["–¥–µ–Ω—å –±—É–¥–µ—Ç –Ω–∞–ø–æ–ª–Ω–µ–Ω –º–∞–≥–∏—á–µ—Å–∫–∏–º–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è–º–∏ –∏ –∑–Ω–∞–∫–∞–º–∏ —Å—É–¥—å–±—ã", "–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–º –ø–æ–≤–æ—Ä–æ—Ç–∞–º, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–≤–µ–¥—É—Ç –∫ —Å—á–∞—Å—Ç–ª–∏–≤—ã–º –ø–µ—Ä–µ–º–µ–Ω–∞–º", "—Å–µ–≥–æ–¥–Ω—è –≤—ã –æ—Å–æ–±–µ–Ω–Ω–æ —Å–∏–ª—å–Ω—ã –≤ –ø—Ä–∏–Ω—è—Ç–∏–∏ –≤–∞–∂–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π"]
        },
        "—Ä–∞–±–æ—Ç–∞": {
            "–∫–∞—Ä—å–µ—Ä–∞": ["–≥—Ä—è–¥—É—Ç —Å–µ—Ä—å—ë–∑–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω—ã –≤ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π —Å—Ñ–µ—Ä–µ - –±—É–¥—å—Ç–µ –≥–æ—Ç–æ–≤—ã –ø—Ä–æ—è–≤–∏—Ç—å –ª–∏–¥–µ—Ä—Å–∫–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞", "–≤–∞—à–∏ —Å–∫—Ä—ã—Ç—ã–µ —Ç–∞–ª–∞–Ω—Ç—ã –±—É–¥—É—Ç –∑–∞–º–µ—á–µ–Ω—ã –≤–ª–∏—è—Ç–µ–ª—å–Ω—ã–º–∏ –ª—é–¥—å–º–∏", "–ø–æ—è–≤–∏—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–∞—á–∞—Ç—å —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –Ω–æ–≤—ã–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø—É—Ç—å"],
            "—Ñ–∏–Ω–∞–Ω—Å—ã": ["–∏–Ω—Ç—É–∏—Ü–∏—è –ø–æ–¥—Å–∫–∞–∂–µ—Ç –≤–µ—Ä–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –≤ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö - –ø—Ä–∏—Å–ª—É—à–∞–π—Ç–µ—Å—å –∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º—É –≥–æ–ª–æ—Å—É", "–Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –º–æ–∂–µ—Ç –ø—Ä–∏–Ω–µ—Å—Ç–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥", "–∑–≤–µ–∑–¥—ã —Å–æ–≤–µ—Ç—É—é—Ç –±—ã—Ç—å –±–æ–ª–µ–µ —Å–º–µ–ª—ã–º–∏ –≤ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ä–µ—à–µ–Ω–∏—è—Ö"],
            "–∞—Ç–º–æ—Å—Ñ–µ—Ä–∞": ["–≤–∞—à–∞ —Ö–∞—Ä–∏–∑–º–∞ —Å–µ–π—á–∞—Å –Ω–∞ –ø–∏–∫–µ - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ –¥–ª—è —É–∫—Ä–µ–ø–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Å–≤—è–∑–µ–π", "–¥–µ–Ω—å –±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–µ–Ω –¥–ª—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –∏ –Ω–µ–¥–æ–ø–æ–Ω–∏–º–∞–Ω–∏–π", "–≤—ã —Å–º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤ –≤ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö"],
            "–æ–±—â–µ–µ": ["–≥—Ä—è–¥—É—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω—ã –ø—Ä–∏–Ω–µ—Å—É—Ç –¥–æ–ª–≥–æ–∂–¥–∞–Ω–Ω—ã–π –ø—Ä–æ—Ä—ã–≤ –≤ –∫–∞—Ä—å–µ—Ä–µ", "–≤—Ä–µ–º—è –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å–º–µ–ª–æ –∏ —Ä–µ—à–∏—Ç–µ–ª—å–Ω–æ - —É—Å–ø–µ—Ö –Ω–∞ –≤–∞—à–µ–π —Å—Ç–æ—Ä–æ–Ω–µ", "–¥–æ–≤–µ—Ä—å—Ç–µ—Å—å —Å–≤–æ–µ–º—É –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–º—É —á—É—Ç—å—é - –æ–Ω–æ –≤–∞—Å –Ω–µ –ø–æ–¥–≤–µ–¥—ë—Ç"]
        },
        "–æ—Ç–Ω–æ—à–µ–Ω–∏—è": {
            "–ª—é–±–æ–≤—å": ["–≥—Ä—è–¥—ë—Ç –≤–∞–∂–Ω–∞—è –≤—Å—Ç—Ä–µ—á–∞, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –ø–µ—Ä–µ—Ä–∞—Å—Ç–∏ –≤ –≥–ª—É–±–æ–∫–æ–µ —á—É–≤—Å—Ç–≤–æ", "–ø–æ—Ä–∞ –æ—Ç–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ—à–ª–æ–µ –∏ –æ—Ç–∫—Ä—ã—Ç—å—Å—è –Ω–æ–≤—ã–º —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º", "–≤–∞—à–∞ –∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç—å –∏ –æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å –ø—Ä–∏–≤–ª–µ–∫—É—Ç –æ—Å–æ–±–µ–Ω–Ω–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ"],
            "—Å–µ–º—å—è": ["—Å–µ–º–µ–π–Ω—ã–µ —É–∑—ã —É–∫—Ä–µ–ø—è—Ç—Å—è –±–ª–∞–≥–æ–¥–∞—Ä—è –≤–∞—à–µ–π –º—É–¥—Ä–æ—Å—Ç–∏ –∏ —Ç–µ—Ä–ø–µ–Ω–∏—é", "–≤—Ä–µ–º—è –¥–ª—è –≥–ª—É–±–æ–∫–∏—Ö —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤ –∏ –∏—Å–∫—Ä–µ–Ω–Ω–µ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è —á—É–≤—Å—Ç–≤", "–¥–æ–º–∞—à–Ω–∏–π –æ—á–∞–≥ —Ç—Ä–µ–±—É–µ—Ç –æ—Å–æ–±–æ–≥–æ –≤–Ω–∏–º–∞–Ω–∏—è - —É–¥–µ–ª–∏—Ç–µ –≤—Ä–µ–º—è –±–ª–∏–∑–∫–∏–º"],
            "–¥—Ä—É–∑—å—è": ["–≤ –≤–∞—à–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏ –ø–æ—è–≤–∏—Ç—Å—è —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π —Å—Ç–∞–Ω–µ—Ç –Ω–∞—Å—Ç–æ—è—â–∏–º –¥—É—Ö–æ–≤–Ω—ã–º –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–º", "—Å—Ç–∞—Ä–∞—è –¥—Ä—É–∂–±–∞ —Ä–∞—Å–∫—Ä–æ–µ—Ç—Å—è —Å –Ω–æ–≤–æ–π, –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω—ã", "–≤–∞—à–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –±—É–¥–µ—Ç –æ—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–∞ –¥–ª—è –∫–æ–≥–æ-—Ç–æ –∏–∑ –±–ª–∏–∑–∫–æ–≥–æ –∫—Ä—É–≥–∞"],
            "–æ–±—â–µ–µ": ["–ø–µ—Ä–∏–æ–¥ –æ—Å–æ–±–µ–Ω–Ω–æ –±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–µ–Ω –¥–ª—è —É–∫—Ä–µ–ø–ª–µ–Ω–∏—è –≤—Å–µ—Ö –≤–∏–¥–æ–≤ –æ—Ç–Ω–æ—à–µ–Ω–∏–π", "–≤–∞—à–∞ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –º—É–¥—Ä–æ—Å—Ç—å –ø–æ–º–æ–∂–µ—Ç —Ä–∞–∑—Ä–µ—à–∏—Ç—å —Å–ª–æ–∂–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏", "–≤—Ä–µ–º—è —Å–æ–±–∏—Ä–∞—Ç—å –≤–æ–∫—Ä—É–≥ —Å–µ–±—è –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤"]
        },
        "–≤—ã—Ö–æ–¥–Ω—ã–µ": {
            "–æ—Ç–¥—ã—Ö": ["–∑–≤–µ–∑–¥—ã —Å–æ–≤–µ—Ç—É—é—Ç —Å–º–µ–Ω–∏—Ç—å –æ–±—Å—Ç–∞–Ω–æ–≤–∫—É - –¥–∞–∂–µ –∫–æ—Ä–æ—Ç–∫–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –ø—Ä–∏–Ω–µ—Å—ë—Ç —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã–µ –æ—Ç–∫—Ä—ã—Ç–∏—è", "–≤—Ä–µ–º—è –¥–ª—è –≥–ª—É–±–æ–∫–æ–≥–æ —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏—è –∏ –º–µ–¥–∏—Ç–∞—Ü–∏–∏ - —ç—Ç–æ –∑–∞—Ä—è–¥–∏—Ç –≤–∞—Å —ç–Ω–µ—Ä–≥–∏–µ–π", "–ø—Ä–∏—Å–ª—É—à–∞–π—Ç–µ—Å—å –∫ —Å–≤–æ–∏–º –∂–µ–ª–∞–Ω–∏—è–º - –æ–Ω–∏ —É–∫–∞–∂—É—Ç –ø—É—Ç—å –∫ –∏—Å—Ç–∏–Ω–Ω–æ–º—É –æ—Ç–¥—ã—Ö—É"],
            "—Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è": ["—Å–ø–æ–Ω—Ç–∞–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –ø–æ–¥–∞—Ä–∏—Ç –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è", "—Ç–≤–æ—Ä—á–µ—Å–∫–∏–π –ø–æ–¥—Ö–æ–¥ –∫ –¥–æ—Å—É–≥—É –ø—Ä–∏–Ω–µ—Å—ë—Ç –æ—Å–æ–±—É—é —Ä–∞–¥–æ—Å—Ç—å", "–Ω–æ–≤–æ–µ —Ö–æ–±–±–∏ –º–æ–∂–µ—Ç –ø–µ—Ä–µ—Ä–∞—Å—Ç–∏ –≤ –Ω–µ—á—Ç–æ –±–æ–ª—å—à–µ–µ"],
            "—Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ": ["–≤–∞—à —Ç–≤–æ—Ä—á–µ—Å–∫–∏–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª –Ω–∞ –ø–∏–∫–µ - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ –≤—Ä–µ–º—è –¥–ª—è —Å–∞–º–æ–≤—ã—Ä–∞–∂–µ–Ω–∏—è", "–Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–µ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ –ø—Ä–∏–≤–µ–¥—ë—Ç –∫ —Å–æ–∑–¥–∞–Ω–∏—é —á–µ–≥–æ-—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ–≥–æ", "–≤—Ä–µ–º—è —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ –ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–æ–≤—ã–µ —Ñ–æ—Ä–º—ã —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞"],
            "–æ–±—â–µ–µ": ["–≤—ã—Ö–æ–¥–Ω—ã–µ –ø—Ä–∏–Ω–µ—Å—É—Ç –≤–∞–∂–Ω—ã–µ –æ–∑–∞—Ä–µ–Ω–∏—è –∏ –æ—Ç–∫—Ä—ã—Ç–∏—è", "–≤—Ä–µ–º—è –Ω–∞–ø–æ–ª–Ω–∏—Ç—Å—è –º–∞–≥–∏—á–µ—Å–∫–∏–º–∏ –º–æ–º–µ–Ω—Ç–∞–º–∏ –∏ –ø—Ä–∏—è—Ç–Ω—ã–º–∏ —Å—é—Ä–ø—Ä–∏–∑–∞–º–∏", "–æ—Ç–¥—ã—Ö –±—É–¥–µ—Ç –æ—Å–æ–±–µ–Ω–Ω–æ –ø–æ–ª–µ–∑–Ω—ã–º –¥–ª—è –¥—É—à–∏ –∏ —Ç–µ–ª–∞"]
        }
    }

    if prediction_type == "–≤–æ–ø—Ä–æ—Å":
        interpretation = random.choice(interpretations['–≤–æ–ø—Ä–æ—Å']['–∑–Ω–∞—á–µ–Ω–∏–µ'])
    elif prediction_type == "–¥–µ–Ω—å":
        interpretation = f"–≠—Ç–∞ –∫–∞—Ä—Ç–∞ —Å–µ–≥–æ–¥–Ω—è {random.choice(interpretations['–¥–µ–Ω—å']['–ª—é–±–æ–≤—å'])}. "
        interpretation += f"–í —Ä–∞–±–æ—Ç–µ {random.choice(interpretations['–¥–µ–Ω—å']['—Ä–∞–±–æ—Ç–∞'])}. "
        interpretation += f"–î–ª—è –∑–¥–æ—Ä–æ–≤—å—è {random.choice(interpretations['–¥–µ–Ω—å']['–∑–¥–æ—Ä–æ–≤—å–µ'])}. "
        interpretation += f"–í —Ü–µ–ª–æ–º –¥–µ–Ω—å {random.choice(interpretations['–¥–µ–Ω—å']['–æ–±—â–µ–µ'])}."
    elif prediction_type == "—Ä–∞–±–æ—Ç–∞":
        interpretation = f"–í –∫–∞—Ä—å–µ—Ä–µ {random.choice(interpretations['—Ä–∞–±–æ—Ç–∞']['–∫–∞—Ä—å–µ—Ä–∞'])}. "
        interpretation += f"–í —Ñ–∏–Ω–∞–Ω—Å–∞—Ö {random.choice(interpretations['—Ä–∞–±–æ—Ç–∞']['—Ñ–∏–Ω–∞–Ω—Å—ã'])}. "
        interpretation += f"–í —Ä–∞–±–æ—á–µ–π –∞—Ç–º–æ—Å—Ñ–µ—Ä–µ {random.choice(interpretations['—Ä–∞–±–æ—Ç–∞']['–∞—Ç–º–æ—Å—Ñ–µ—Ä–∞'])}. "
        interpretation += f"–í —Ü–µ–ª–æ–º {random.choice(interpretations['—Ä–∞–±–æ—Ç–∞']['–æ–±—â–µ–µ'])}."
    elif prediction_type == "–æ—Ç–Ω–æ—à–µ–Ω–∏—è":
        interpretation = f"–í –ª—é–±–≤–∏ {random.choice(interpretations['–æ—Ç–Ω–æ—à–µ–Ω–∏—è']['–ª—é–±–æ–≤—å'])}. "
        interpretation += f"–í —Å–µ–º—å–µ {random.choice(interpretations['–æ—Ç–Ω–æ—à–µ–Ω–∏—è']['—Å–µ–º—å—è'])}. "
        interpretation += f"–í –¥—Ä—É–∂–±–µ {random.choice(interpretations['–æ—Ç–Ω–æ—à–µ–Ω–∏—è']['–¥—Ä—É–∑—å—è'])}. "
        interpretation += f"–í —Ü–µ–ª–æ–º {random.choice(interpretations['–æ—Ç–Ω–æ—à–µ–Ω–∏—è']['–æ–±—â–µ–µ'])}."
    elif prediction_type == "–≤—ã—Ö–æ–¥–Ω—ã–µ":
        interpretation = f"–í –æ—Ç–¥—ã—Ö–µ {random.choice(interpretations['–≤—ã—Ö–æ–¥–Ω—ã–µ']['–æ—Ç–¥—ã—Ö'])}. "
        interpretation += f"–í —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è—Ö {random.choice(interpretations['–≤—ã—Ö–æ–¥–Ω—ã–µ']['—Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è'])}. "
        interpretation += f"–í —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–µ {random.choice(interpretations['–≤—ã—Ö–æ–¥–Ω—ã–µ']['—Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ'])}. "
        interpretation += f"–í —Ü–µ–ª–æ–º {random.choice(interpretations['–≤—ã—Ö–æ–¥–Ω—ã–µ']['–æ–±—â–µ–µ'])}."

    return interpretation

def card(update: Update, context: CallbackContext, prediction_type="–¥–µ–Ω—å"):
    card_of_the_day = random.choice(tarot_cards)
    base_card = card_of_the_day.split('‚Äî')[0].strip()

    ai_interpretation = get_ai_interpretation(base_card, prediction_type)

    type_labels = {
        "–¥–µ–Ω—å": "–ö–∞—Ä—Ç–∞ –¥–Ω—è",
        "—Ä–∞–±–æ—Ç–∞": "–ö–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã",
        "–æ—Ç–Ω–æ—à–µ–Ω–∏—è": "–ö–∞—Ä—Ç–∞ –æ—Ç–Ω–æ—à–µ–Ω–∏–π",
        "–≤—ã—Ö–æ–¥–Ω—ã–µ": "–ö–∞—Ä—Ç–∞ –≤—ã—Ö–æ–¥–Ω—ã—Ö"
    }

    message = f"üé¥ {type_labels[prediction_type]}:\n\n{card_of_the_day}\n\n‚ú® –û—Å–æ–±–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ:\n{ai_interpretation}"

    update.message.reply_text(message)

def main():
    import os
    token = os.environ.get("TOKEN")
    if not token:
        logger.error("–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return

    updater = Updater(token)

    dp = updater.dispatcher
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("card", card))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, button_handler))

    updater.start_polling()
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    updater.idle()

if __name__ == "__main__":
    main()